- name: Update apt repo
  shell: apt update && apt upgrade -y

- name: Download curl
  shell: apt install curl -y

- name: Download K3S server
  shell: curl -sfL https://get.k3s.io | sh -

- name: Install metallb
  shell: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.15.2/config/manifests/metallb-native.yaml

- name: Create namespace if it doesn't exist
  shell: kubectl create namespace argocd
  register: create_ns
  failed_when: create_ns.rc != 0 and 'AlreadyExists' not in create_ns.stderr


- name: install ArgoCD
  shell: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

- name: Change svc settings to Loadbalancer
  shell: >
    kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
  
- name:  Download helm script
  shell: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3

- name: Change permissions and run installation
  shell: chmod 700 get_helm.sh && ./get_helm.sh

- name: Add helm repo
  shell: helm repo add external-secrets https://charts.external-secrets.io

- name: Update Helm repositories
  shell: helm repo update

- name: Install External Secrets Operator
  shell: helm upgrade --install external-secrets external-secrets/external-secrets --namespace external-secrets --create-namespace --version 0.15.0
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Create folder for Kubernetes manifests
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /kubernetes
    - /kubernetes/argocd
    - /kubernetes/ESO

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: /kubernetes
    owner: root
    group: root
    mode: '0644'
  with_fileglob:
    - "{{ role_path }}/files/*"

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: /kubernetes/argocd
    owner: root
    group: root
    mode: '0644'
  with_fileglob:
    - "{{ role_path }}/files/argocd/*"

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: /kubernetes/ESO
    owner: root
    group: root
    mode: '0644'
  with_fileglob:
    - "{{ role_path }}/files/ESO/*"
